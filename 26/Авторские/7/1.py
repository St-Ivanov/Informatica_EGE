'''Входной файл содержит заявки на проведение мероприятий в конференц-⁠зале в течение одного дня. В каждой заявке указано время 
начала и время окончания мероприятия в минутах от начала суток. Если время проведения двух или более мероприятий пересекается, то 
провести можно не более одного из них. Между окончанием одного мероприятия и началом следующего необходим перерыв не менее 20 
минут.
Определите, какое максимальное количество мероприятий можно провести в конференц-⁠зале в этот день и каким при этом может быть 
максимально возможный перерыв между двумя последними мероприятиями.
Входные данные.
Первая строка входного файла содержит целое число N (N ≤ 1000)  — общее количество заявок. Каждая из следующих N строк описывает одну 
заявку и содержит 2 целых числа, обозначающих время начала и время окончания мероприятия в минутах с начала суток. Все числа не 
превосходят 1440, второе число в каждой строке больше первого.
В ответе запишите два целых числа: сначала максимальное количество мероприятий, которые можно провести в этот день, затем  — 
максимально возможный при таком количестве мероприятий перерыв между двумя последними мероприятиями.'''
with open(r'C:\Users\Stepan_\Documents\Informatica\Informatica_EGE\26\Авторские\7\1.txt') as f:
    N = int(f.readline())
    sp = [[int(j) for j in i.split()] for i in f.readlines()]

# Удаляем, которые заканчиваются после суток
sp = list(filter(lambda x: x[1] <= 1440, sp))
# Добавляем 20 минут после
for i in range(N):
    sp[i][1] += 20
    sp[i].append(sp[i][1]-sp[i][0])
sp.sort(key=lambda x: x[2])
kol = 0
# Список со временем
time = [True] * 1441
last = 0
for start, end, cont in sp:
    # Если свободно, занимаем
    if all(time[start:end]):
        last = max(start, last)
        for i in range(start, end):
            time[i] = False
        kol += 1
# Удаляем последний
for i in range(last, len(time)):
    time[i] = True
# Ищем предпоследний
pred_last = len(time) - time[::-1].index(False)
# Подходящее время
podx = [start for start, end, cont in sp if start >= pred_last]
# Считаем минуты, +20 минут, которые мы отдыхали
print(kol, max(podx) - pred_last + 20)