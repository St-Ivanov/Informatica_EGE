'''№0. Меню бургерной включает 1000 различных блюд, которым присвоены коды от 0 до 999. В отчёте фиксируют время начала и окончания 
приготовления каждого заказа. Если запись о заказе некоторого блюда встретилась первый раз – это время начала приготовления; если второй 
раз, значит, он уже приготовлен (может случиться так, что некоторые заказы по каким-то причинам не были приготовлены). Готовить несколько 
блюд с одним номером одновременно нельзя. 
Входные данные представлены в файле 26-86.txt следующим образом.  В первой строке входного файла записано натуральное число N (1 ≤ N ≤ 
100000) – общее количество строк с данными. В каждой из следующих N строках записана пара чисел, разделённых пробелом: время (в минутах 
от начала работы бургерной) и код блюда (0..999). 
Запишите в ответе два числа: максимальное количество заказов, приготовление которых закончилось в течение одного часа, и код блюда с 
наибольшей средней продолжительностью приготовления.
Пример входного файла:
8
60 5
40 1
90 5
45 5
20 2
55 1
10 2
50 5 
Наибольшее количество заказов – три – было приготовлено за час времени от 10 до 70 (70 – 10 = 60), это есть часовой максимум. Блюдо с кодом 
1 в среднем готовилась 55 – 40 = 15 минут, блюдо 2 готовилась 20 – 10 = 10 минут, а блюдо 5 – (30 + 5)/2 = 17,5 минут. Ответ: 3 5.'''

with open(r'C:\Users\Stepan_\Documents\Informatica\Informatica_EGE\26\Авторские\9\1.txt') as f:
    n = int(f.readline())
    sp = [[int(j) for j in i.split()] for i in f.readlines()]

mas_start = [[] for i in range(1000)]
sp.sort(key=lambda x: (x[1], x[0]))
f = True
for i in range(len(sp) - 1):
    if f:
        if sp[i][1] == sp[i + 1][1]:
            mas_start[sp[i][1]].append(sp[i + 1][0] - sp[i][0])
            f = False
    else:
        f = True
ans = []
for i in range(1000):
    if len(mas_start[i]) != 0:
        ans.append((sum(mas_start[i])/len(mas_start[i]), i))
mas_end = []
f = True
for i in range(len(sp)):
    if f:
        if sp[i][1] == sp[i + 1][1]:
            mas_end.append([sp[i][0], sp[i + 1][0]])
            f = False
    else:
        f = True
mas_end.sort(key=lambda x: (x[0], x[1]))
max_time = [0] * 1441
for start, end in mas_end:
    max_time[end] += 1
mx = 0
for i in range(0, 1441):
    mx = max(mx, sum(max_time[i:i+60]))
print(mx)
print(max(ans, key=lambda x: x[0]))
