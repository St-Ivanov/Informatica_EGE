"""Входной файл содержит информацию о плане проведения собраний в конференц-⁠зале. Для каждого собрания известно время 
проведения и длительность собрания. Определите, максимальное количество собраний, которое может быть проведено в конференц-⁠зале в 
течение одного дня. Если одно из собраний заканчивается в ту же минуту, в которую начинается другое выступление, то их можно поставить 
вместе. Также необходимо определить максимальный перерыв между последними собраниями при их самом оптимальном размещении. Если 
способов выбрать последнее собрание несколько, выбрать нужно то, длительность которого больше.
В первой строке входного файла находится натуральное число N (N ≤ 1000), обозначающее количество собраний. Каждая из следующих N строк 
содержит два натуральных числа: указанное в заявке время проведения (в минутах от начала суток, не превышает 1300) и длительность (в 
минутах, не превышает 1000) собрания.
Запишите в ответ два числа: максимальное количество собраний, которое можно провести, и максимальный перерыв между последними 
собраниями при их самом оптимальном размещении."""

with open('26/Авторские/2/2.txt') as f:
    N = int(f.readline())
    sp = [[int(j) for j in i.split()] for i in f.readlines()]

time = [False] * 1441
sp.sort(key=lambda x: x[1])
kol = 0
last = [0, 0]
# Заполняем оптимально конференции
for start, end in sp:
    if any(time[start:start + end]) == False:
        last = max(last, [start, end], key=lambda x: x[0])
        for i in range(start, start + end):
            time[i] = True
        kol += 1
# Создаём список стартов, которые могли бы быть после последней конференции
konf_last = [i for i in sp if i[0] >= last[0]]
# Убираем последнию конференцию
for i in range(last[0], last[0] + last[1]):
    time[i] = False
# Запоминаем время окончания предпоследней конференции
last_time = len(time) - time[::-1].index(True) - 1
# Находим самый последний старты концференции, сортируем сначала по времени старта, потом по длительности
konf_last.sort(key=lambda x: (x[0], x[1]))
posledn_konf = konf_last[-1]
print(kol, posledn_konf[0] - last_time)